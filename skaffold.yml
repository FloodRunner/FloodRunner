apiVersion: skaffold/v2beta2
kind: Config
profiles:
  - name: traefik
    deploy:
      kubectl:
        manifests:
          #setup traefik for local development (will need `minikube tunnel` to be running to get external ip)
          - k8s/traefik/traefik-crd.yml
          - k8s/traefik/traefik-rbac.yml
          - k8s/traefik/traefik-secrets.yml #this file will need to be created on each pc as its gitignored
          - k8s/traefik/traefik.yml
          - k8s/traefik/traefik-whoami-deployment.yml #whoami container to use to check that Let's Encrypt and routing is working
  - name: rabbitmq
    deploy:
      kubectl:
        manifests:
          #setup rabbitmq routes
          - k8s/rabbitmq/rabbitmq-management-route.yml
          - k8s/rabbitmq/rabbitmq-route.yml
  - name: mongodb
    deploy:
      kubectl:
        manifests:
          #setup mongodb
          - k8s/mongodb/database-persistent-volume-claim.yml
          - k8s/mongodb/mongodb-cluster-ip-service.yml
          - k8s/mongodb/mongodb-configmap.yml
          - k8s/mongodb/mongodb-secrets.yml
          - k8s/mongodb/mongodb-deployment.yml
          - k8s/mongodb/mongodb-route.yml
      statusCheckDeadlineSeconds: 180
  - name: api
    deploy:
      kubectl:
        manifests:
          - k8s/api/api-cluster-ip-service.yml
          - k8s/api/api-secrets.yml
          - k8s/api/api-configmap.yml
          - k8s/api/api-rbac.yml
          - k8s/api/api-deployment.yml
          - k8s/api/api-route.yml
  - name: web
    deploy:
      kubectl:
        manifests:
          - k8s/web/web-configmap.yml
          - k8s/web/web-deployment.yml
          - k8s/web/web-cluster-ip-service.yml
          - k8s/web/web-route.yml
  - name: api-develop
    build:
      local:
        push: true
      artifacts:
        - image: jellydock/floodrunner-api
          context: api
          docker:
            dockerfile: Dockerfile.dev
          sync:
            infer:
              - "**/*.js"
              - "**/*.ts"
              - "**/*.css"
              - "**/*.html"
    deploy:
      kubectl:
        manifests:
          #setup api
          - k8s/api/api-configmap.yml
          - k8s/api/api-secrets.yml
          - k8s/api/api-rbac.yml
          - k8s/api/api-cluster-ip-service.yml
          - k8s/api/api-deployment.yml
          - k8s/api/api-route.yml
  - name: sandboxrunner
    build:
      artifacts:
        - image: jellydock/floodrunner-sandboxrunner
          context: SandboxRunner
          kaniko:
            dockerfile: Dockerfile
            buildArgs:
              TAG: latest
      cluster:
        dockerConfig:
          path: ./docker-config.json
portForward:
  - resourceType: service #this doesn't work for some reason (open issue with skaffold)
    resourceName: mongodb-cluster-ip-service
    namespace: default
    port: 27017
    localPort: 28018
    address: 127.0.0.1
